---
- name: Debug role configuration
  ansible.builtin.debug:
    msg:
      - "ludus_k3s_role: {{ ludus_k3s_role }}"
      - "Host: {{ inventory_hostname }}"
      - "All role vars: {{ role_names | default('none') }}"

- name: Validate k3s role configuration
  ansible.builtin.fail:
    msg: "ludus_k3s_role must be either 'server' or 'agent'. Current value: '{{ ludus_k3s_role }}'"
  when: ludus_k3s_role not in ['server', 'agent']

- name: Validate agent configuration
  ansible.builtin.debug:
    msg: "Agent configuration will be auto-discovered from server node"
  when: ludus_k3s_role == 'agent'

- name: Install required packages
  ansible.builtin.package:
    name: 
      - curl
      - git
      - tar
      - wget
      - ca-certificates
      - iptables
      - iptables-persistent
    state: present
    update_cache: false

- name: Install additional packages for RHEL/CentOS
  ansible.builtin.package:
    name:
      - iptables-services
    state: present
  when: ansible_os_family == "RedHat"
  failed_when: false

- name: Update ca-certificates
  ansible.builtin.command: update-ca-certificates
  become: true
  when: ansible_os_family == "Debian"

- name: Update ca-certificates (RHEL/CentOS)
  ansible.builtin.command: update-ca-trust
  become: true
  when: ansible_os_family == "RedHat"

- name: Download k3s installation script
  ansible.builtin.include_tasks:
    file: download_file.yml
  vars:
    ludus_download_file_name: k3s_install.sh
    ludus_download_file_url: https://get.k3s.io
    ludus_download_file_host_path: /tmp

- name: Make k3s install script executable
  ansible.builtin.file:
    path: /tmp/k3s_install.sh
    mode: '0755'

- name: Install k3s server
  ansible.builtin.include_tasks: install_server.yml
  when: ludus_k3s_role == 'server'

- name: Install k3s agent
  ansible.builtin.include_tasks: install_agent.yml
  when: ludus_k3s_role == 'agent'

- name: Ensure k3s service is running and enabled
  ansible.builtin.systemd:
    name: "{{ 'k3s' if ludus_k3s_role == 'server' else 'k3s-agent' }}"
    state: started
    enabled: true
    daemon_reload: true

